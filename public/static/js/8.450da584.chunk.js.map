{"version":3,"sources":["shared/components/UIElements/Card.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","PlaceItem","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","a","process","id","Authorization","token","onDelete","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","inverse","danger","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","map","place","key","creator","coordinates","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","useEffect","responseData","places","fetchPlaces","deletedPlaceId","prevPlaces","filter"],"mappings":"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","file":"static/js/8.450da584.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useContext } from \"react\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport \"./PlaceItem.css\";\r\n\r\nconst PlaceItem = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => setShowConfirmModal(true);\r\n\r\n  const cancelDeleteHandler = () => setShowConfirmModal(false);\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        { Authorization: \"Bearer \" + auth.token } // 10.Adding Authorization\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <h2>THE MAP!</h2>\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Proceed?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>Are you sure?</p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\n\r\nimport \"./PlaceList.css\";\r\n\r\nconst PlaceList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2> No places found!! Maybe create one?</h2>\r\n          <Button to=\"/places/new\">Share place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport PlaceList from \"../components/PlaceList\";\r\n\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const userId = useParams().userId;\r\n\r\n  // sendResuest will never be recreated because it is wrapped\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeletedHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n"],"sourceRoot":""}